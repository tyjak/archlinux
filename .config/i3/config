# app to start on launch i3
exec_always compton -f

# start a concole if not starting
exec [ $( ps -eo cmd | grep -c '[t]ermite --title terminal' ) -eq 2 ] && termite --title terminal

set $home /home/david

# special keys
set $mod Mod4
set $capsLock Mod3

# fix floating windows size
# medium size
set $wfM_height 600
set $wfM_width 1000
# big size
set $wfL_height 1000
set $wfL_width 1800

set $screen1 eDP1
set $screen2 DP1-2

# layout mode for new container
workspace_layout tabbed

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below. ISO 10646 = Unicode
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, if you need a lot of unicode glyphs or
# right-to-left text rendering, you should instead use pango for rendering and
# chose a FreeType font, such as:
font pango:MesloLGSDZ Nerd Font, icons, FontAwesome, Devicons, 10
#font pango:FuraCode Nerd Font, icons, FontAwesome, Devicons, 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal;
bindsym $mod+Shift+Return splith; exec i3-sensible-terminal;

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run -i -nb '#859900' -nf '#eee8d5' -sb '#cb4b16' -fn 'MesloLGSDZ Nerd Font-10' -h 36
bindsym $mod+n exec networkmanager_dmenu -i -nb '#b58900' -nf '#eee8d5' -sb '#002b24' -fn 'MesloLGSDZ Nerd Font-10' -h 36
bindsym $mod+c exec clipmenu -i -nb '#2aa198' -nf '#eee8d5' -sb '#cb4b16' -fn 'MesloLGSDZ Nerd Font-10' -h 36
bindsym $mod+x exec PASSWORD_STORE_X_SELECTION=secondary passmenu -i -nb '#002b24' -nf '#eee8d5' -sb '#b58900' -fn 'MesloLGSDZ Nerd Font-10' -h 36 && xsel -o -s | xdotool type --file -
bindsym $mod+Shift+x exec "DMENU_HEIGHT=36 passdmenu.py -u -x p,s -P --type -r -D ~/share/bin/mypassdmenu"
bindsym $mod+s exec quickswitch -w -d "dmenu -i -nb '#eee8d5' -nf '#002b36' -sb '#859900' -fn 'MesloLGSDZ Nerd Font-10' -h 36"
bindsym $mod+Shift+s exec quickswitch -w -j -f -d "dmenu -i -nb '#eee8d5' -nf '#002b36' -sb '#859900' -fn 'MesloLGSDZ Nerd Font-10' -h 36"
bindsym $capsLock+Tab exec quickswitch -s -d "dmenu -l 10 -i -nb '#eee8d5' -nf '#002b36' -sb '#859900' -fn 'MesloLGSDZ Nerd Font-10' -h 36"
bindsym $mod+t exec "dict -d fd-eng-fra $(xclip -o) | tail +4 | dmenu -i -nb '#eee8d5' -nf '#002b36' -sb '#859900' -fn 'MesloLGSDZ Nerd Font-10' -h 36"
bindsym $mod+Shift+t exec "dict -d fd-fra-eng $(xclip -o) | tail +4 | dmenu -i -nb '#eee8d5' -nf '#002b36' -sb '#859900' -fn 'MesloLGSDZ Nerd Font-10' -h 36"
bindsym $mod+y exec searchduckduckgo
bindsym $mod+i exec dmenu-ssh
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# english dictionary
bindsym $mod+Shift+d exec "export D_DICT_DB_OPT='-d english'; ~/share/bin/dict_lookup"

# search for selection on the web
bindsym $mod+g exec /usr/bin/vimb "$(xclip -o)"

focus_follows_mouse no

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
#bindsym $mod+Left focus left
#bindsym $mod+Down focus down
#bindsym $mod+Up focus up
#bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
#bindsym $mod+Shift+Left move left
#bindsym $mod+Shift+Down move down
#bindsym $mod+Shift+Up move up
#bindsym $mod+Shift+Right move right

# cycle throw workspace
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev
bindsym $mod+Shift+Left workspace prev
bindsym $mod+Shift+Right workspace next

# split in horizontal orientation
bindsym $mod+Shift+v split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout splith

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# sticky window
#bindsym $mod+Shift+s sticky toggle
# focus the child container
#bindsym $mod+d focus child

bindsym $mod+Left move workspace to output left
bindsym $mod+Right move workspace to output right

#icon
set $vimIcon 

#menu title
set $menu1 1: terminal
set $menu2 2: web
set $menu3 3:
set $menu4 4: gmail
set $menu5 5:
set $menu6 6:<span font=\"icomoon 13\"></span>
set $menu7 7:
set $menu8 8:
set $menu10 10: PE


# switch to workspace
bindsym $mod+1 workspace $menu1; exec [ $( ps -eo cmd | grep -c '[t]ermite --title terminal' ) -eq 2 ] && termite --title terminal; move workspace to output $screen1
bindsym $mod+2 workspace $menu2; exec [ $(ps h -C vimb -o args | grep "^/usr/bin/vimb$" | wc -l) = 0 ] && /usr/bin/vimb; move workspace to output $screen2
bindsym $mod+3 workspace $menu3; exec [ $( ps -eo cmd | grep -c '[t]ermite --title uvim -e vim' ) -eq 2 ] && termite --title uvim -e vim
#bindsym $mod+4 workspace $menu4; layout tabbed; exec [ $( ps -eo cmd | grep -c '[u]rxvt -title muttgmail -e mutt' ) -eq 2 ] && urxvt -title muttgmail -e mutt -e "source ~/.mutt/gmail.com"
bindsym $mod+4 workspace $menu4; exec [ $( ps -eo cmd | grep -c '[t]ermite --title mail-gmail' ) -eq 2 ] && termite --title mail-gmail -e '/usr/bin/mutt -e "source ~/.mutt/gmail.com"'
bindsym $mod+5 workspace $menu5; exec [ $( ps -eo cmd | grep -c '^/usr/lib/brave-bin/brave' ) -eq 0 ] && /usr/bin/brave; move workspace to output $screen2
bindsym $mod+6 workspace $menu6; exec ~/share/bin/i3/firefox
bindsym $mod+7 workspace $menu7; exec ~/share/bin/i3/photos
#bindsym $mod+5 workspace $menu5; exec [ $( ps -eo cmd | grep -c '[t]ermite --title muttperso' ) -eq 2 ] && termite --title muttperso -e '/usr/bin/mutt -e "source ~/.mutt/newmanity.com"'
#bindsym $mod+6 workspace $menu6; exec [ $( ps -eo cmd | grep -c '[t]ermite --title muttjit' ) -eq 2 ] && termite --title muttjit -e '/usr/bin/mutt -e "source ~/.mutt/jobintree.com"'
#bindsym $mod+7 workspace $menu7; exec [ $( ps -eo cmd | grep -c '[u]rxvt -title tmux-weechat -e ssh -t david@do.tyjak.net LANG=fr_FR.UTF-8 tmux a -t weechat' ) -eq 2 ] && urxvt -title tmux-weechat -e ssh -t david@do.tyjak.net LANG=fr_FR.UTF-8 tmux a -t weechat
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace $menu10; exec [ $( ps -eo cmd | grep -c '^/usr/bin/evolution' ) -eq 0 ] && /usr/bin/evolution; move workspace to output $screen2

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $menu1
bindsym $mod+Shift+2 move container to workspace $menu2
bindsym $mod+Shift+3 move container to workspace $menu3
bindsym $mod+Shift+4 move container to workspace $menu4
bindsym $mod+Shift+5 move container to workspace $menu5
bindsym $mod+Shift+6 move container to workspace $menu6
bindsym $mod+Shift+7 move container to workspace $menu7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10


# TODO: verify precedence with /etc/acpi/handler.sh
#set $sink `pactl list short sinks | grep RUNNING | head -1 | cut -f1`
#bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume $sink +5%
#bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume $sink -5%
bindsym XF86AudioMute exec --no-startup-id amixer set Master toggle
bindsym XF86AudioNext exec mpc next
bindsym XF86AudioPrev exec mpc prev
bindsym XF86AudioPause exec mpc toggle
#pb authorisation
#bindsym XF86MonBrightnessDown   exec xbacklight -dec 5 && pkill -RTMIN+20 i3blocks
#bindsym XF86MonBrightnessUp     exec xbacklight -inc 5 && pkill -RTMIN+20 i3blocks

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
  #font pango:FuraCode Nerd Font, 10
  font pango:Meslo LG S DZ, forkawesome, icomoon,  10
  status_command python ~/.config/i3/status.py
    position top
  colors {
    separator #93a1a1
    background #002b36
    statusline #93a1a1
    focused_workspace #eee8d5 #859900 #eee8d5
    active_workspace #fdf6e3 #6c71c4 #fdf6e3
    inactive_workspace #073642 #eee8d5 #002b36
    urgent_workspace #d33682 #d33682 #fdf6e3
  }
  #separator_symbol " "
  strip_workspace_numbers yes
  tray_output primary
}

hide_edge_borders both

#scratchpad
bindsym $mod+m move scratchpad
bindsym $mod+o scratchpad show

#automatic back-and-forth switch workspace
workspace_auto_back_and_forth yes


#generic
for_window [class="w_float-notitle-medium-sticky"] border 1pixel, floating enable, resize set $wfL_width $wfL_height, move position center, sticky enable
for_window [class="w_float-notitle-medium"] border 1pixel, floating enable, resize set $wfL_width $wfL_height, move position center
for_window [class="w_float-notitle"] border 1pixel, floating enable
for_window [class="w_float"] floating enable

#large et small window popup
set $float_largeW_app Gpodder|Mpsyt|Modem-manager-gui|Nm-connection-editor|Mattermost
for_window [class="$float_largeW_app"] floating enable, resize set $wfL_width $wfL_height, move position center, sticky enable

#small window with no title bar (keep it small)
set $float_smallW_app Pavucontrol|Blueberry.py|Pick-colour-picker
for_window [class="$float_smallW_app"] floating enable, resize set $wfM_width $wfM_height, move position center, border 1pixel, sticky enable

#second screen
for_window [class="Caprine|Evolution|Slack|Teams|Brave-browser"] output $screen2

# applications
for_window [class="Vimb"] border 1pixel, focus
for_window [title="uvim"] border 1pixel
for_window [class="URxvt"] border 1pixel
for_window [class="Termite"] border 1pixel
for_window [class="Gvim"] border 1pixel
for_window [title="filemanager"] border 1pixel, layout tabbed
for_window [title="JACK.*"] floating enable
for_window [title="Molotov"] floating enable, resize set $wfL_width $wfL_height, move position center, sticky enable, output $screen1
for_window [class="Deezer"] floating enable, border 1pixel, resize set $wfL_width $wfL_height, move position center, sticky enable, output $screen1
for_window [class="Caprine"] floating enable, resize set $wfL_width $wfL_height, border 1pixel, sticky enable;
for_window [title="pinentry"] floating enable
for_window [class="termite_dict"] floating enable, move position center, border 1pixel
for_window [title="david_adsnovo - Skype*"] focus, sticky enable, move right, resize shrink left 20 px or 20 ppt, layout splith;
for_window [title="Liste de contacts"] focus, sticky enable, move right, resize shrink left 20 px or 20 ppt, layout splith;
for_window [class="Cawbird"] resize set width 640 px;
for_window [title="^ [^ ]+$"] move --no-auto-back-and-forth container to workspace $menu1, focus
#for_window [title="La Quadrature du Net - Mastodon - Media Fédéré"] focus parent, sticky enable, move right, resize shrink left 20 px or 20 ppt, layout splith;
#for_window [title="Twitter"] move right; resize shrink left 30 px or 30 ppt;
#for_window [class="Vimb"] border 1pixel
#for_window [title="vim"] title_format "<span font='devicons'> </span>%title"

# assign app to dedicated workspace
assign [class="(pinta|Inkscape)"] graphic
for_window [class="(pinta|Inkscape)"] focus
assign [class="Pidgin"] pidgin
for_window [class="Pidgin"] focus
assign [class="Brave-browser"] $menu5
assign [class="Shotwell"] $menu7
assign [class="Evolution"] $menu10
assign [class="trefle"] trèfle
for_window [class="trefle"] output $screen1
#assign [class="Vimb"] $menu2
#for_window [class="Vimb"] layout tabbed; focus
#assign [class="Urxvt"] terminal
#for_window [class="Urxvt"] layout splith; focus

#vimb with title starting by "scratchpad_" are moved to the scratch pad and show
#for_window [title="scratchpad_*"] sticky enable, border 1pixel;
set $scratchpads scratchpad_vimwiki|scratchpad_pevimwiki|scratchpad_vimdiary|scratchpad_vimb|skype|pidgin|iCloud|gPodder
for_window [title="$scratchpads"] sticky enable, border 1pixel, move scratchpad, scratchpad show;
for_window [title="Franz"] sticky enable, border 1pixel, move scratchpad, resize set 720 874, scratchpad show, move absolute position 720px 24px;
for_window [title="scratchpad_ncmpcpp"] sticky enable, border 1pixel, move scratchpad, resize set $wfM_width  $wfM_height, scratchpad show;
for_window [title="scratchpad_cal"] sticky enable, border 1pixel, move scratchpad, scratchpad show;
for_window [title="N26"] sticky enable, border 1pixel, move scratchpad, resize set 500 820, scratchpad show, move position center;
for_window [class="Slack"] sticky enable, border 1pixel, move scratchpad, resize set $wfL_width $wfL_height, scratchpad show;
for_window [class="Teams"] sticky enable, border 1pixel, move scratchpad, resize set $wfL_width $wfL_height, scratchpad show;
for_window [class="VirtualBox Machine"] sticky enable, border 1pixel, move scratchpad, fullscreen, scratchpad show;

client.focused #859900 #859900 #eee8d5 #859900
client.focused_inactive #073642 #073642 #586e75 #6c71c4
client.unfocused #073642 #073642 #93a1a1 #586e75
client.urgent #d33682 #d33682 #fdf6e3 #dc322f

#set $Locker i3lock -i ~/.config/wallpaper/solarized-dark.png -c 002b36 && sleep 1
set $Locker i3lock -c 002b36 && sleep 1

set $i3ctl i3 [r]eload re[s]tart restart [b]ar [e]xit
bindsym $mod+Shift+r mode "$i3ctl"
mode "$i3ctl" {
    # reload the configuration file
    bindsym r reload
    # restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
    bindsym s restart
    # exit i3 (logs you out of your X session)
    bindsym e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
    # restart bar
    bindsym b exec pkill -SIGUSR1 -f "python $home/.config/i3/status.py", mode "default"


    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# resize mod window $mod+r (you can also use the mouse for that)
bindsym $mod+r mode "resize / move"
mode "resize / move" {

    bindsym h resize grow width 10 px or 10 ppt
    bindsym j resize grow height 10 px or 10 ppt
    bindsym k resize shrink height 10 px or 10 ppt
    bindsym l resize shrink width 10 px or 10 ppt
    bindsym m move position center

    # same bindings, but for the arrow keys
    bindsym Left move left 10 px
    bindsym Down move down 10 px
    bindsym Up move up 10 px
    bindsym Right move right 10 px

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Press $mod+o followed by either f, t, Esc or Return to launch firefox,
#  etc ... or return to the default mode, respectively.
set $mode_launcher Launch: [f]irefox [t]rello [s]lack [r]emmina [w]ork-env [W]riter
bindsym $mod+p mode "$mode_launcher"

mode "$mode_launcher" {

    bindsym f exec firefox, mode "default"
    bindsym t exec trello, mode "default"
    bindsym s exec slack, mode "default"
    bindsym r exec remmina, mode "default"
    bindsym w exec work-env, mode "default"
    bindsym W exec writer, mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Press $mod+Shift+c s or f to take a screen shot
set $mode_screenshot Screenshot [s]election [f]ullscreen
bindsym $mod+Shift+c mode "$mode_screenshot"

mode "$mode_screenshot" {

    #bindsym s exec maim --opengl --magnify -s ~/Desktop/screenshot-$(date +%F-%H%M%S).png, mode "default"
    bindsym s exec maim -s ~/Images/screenshot-$(date +%F-%H%M%S).png, mode "default"
    bindsym f exec maim ~/Images/screenshot-$(date +%F-%H%M%S).png, mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# file navigation with ranger
set $mode_filemanager Goto [h]ome [d]ownloads [s]hare [D]esktop
bindsym $mod+Shift+f mode "$mode_filemanager"

mode "$mode_filemanager" {

    bindsym h exec filemanager ~/., mode "default"
    bindsym d exec filemanager ~/downloads, mode "default"
    bindsym s exec filemanager ~/share, mode "default"
    bindsym Shift+d exec filemanager ~/Desktop, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

#USB mount file
set $mode_usbmount USB [m]ount or [u]mount
bindsym $mod+u mode "$mode_usbmount"
mode "$mode_usbmount" {
    bindsym m exec zsh -i -c 'udiskie-mount -2ar', mode "default"
    bindsym u exec zsh -i -c 'udiskie-umount /run/media/*/*', mode "default"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}


# system mode, hit power button to halt, suspend, reboot or shutdown
set $mode_system System [l] lock, [e] logout, [s] suspend, [h] hibernate, [r] reboot, [Shift]+[s] shutdown
bindsym Pause mode "$mode_system"
bindsym XF86Sleep "$mode_system"
bindsym XF86PowerOff mode "$mode_system"

mode "$mode_system" {

    bindsym l exec --no-startup-id $Locker, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# mplayer control and mpd control
set $mode_player player: [Pp]ause/[Pp]lay [n]ext [Ss]eek [Qq]quit/stop
bindsym $mod+b mode "$mode_player"

mode "$mode_player" {

    bindsym p exec zsh -i -c 'echo "pause" > /tmp/mplayer', mode "default"
    bindsym Shift+p exec mpc toggle, mode "default"
    bindsym n exec zsh -i -c 'mpc next', mode "default"
    bindsym s exec zsh -i -c 'echo "seek 10" > /tmp/mplayer'
    bindsym Shift+s exec mpc seek +10
    bindsym q exec zsh -i -c 'echo "quit" > /tmp/mplayer && mpc stop', mode "default"
    bindsym Shift+q exec mpc stop, mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $capsLock+t exec [ $( ps -eo cmd | grep -c '[t]ermite --title scratchpad_pevimwiki' ) -eq 2 ] && termite --title scratchpad_pevimwiki -e 'vim share/vimwiki_boulot/index.wiki' || i3-msg [title=scratchpad_pevimwiki] scratchpad show;
bindsym $capsLock+w exec [ $( ps -eo cmd | grep -c '[t]ermite --title scratchpad_vimwiki' ) -eq 2 ] && termite --title scratchpad_vimwiki -e 'vim -c VimwikiIndex' || i3-msg [title=scratchpad_vimwiki] scratchpad show;
bindsym $capsLock+i exec [ $( ps -eo cmd | grep -c '[t]ermite --title scratchpad_vimdiary' ) -eq 2 ] && termite --title scratchpad_vimdiary -e 'vim -c VimwikiDiaryIndex' || i3-msg [title=scratchpad_vimdiary] scratchpad show;
bindsym $capsLock+v exec [ $( ps -eo cmd | grep -c '[t]ermite --class scratchpad --title scratchpad_vimb' ) -eq 2 ] && termite --class scratchpad --title scratchpad_vimb -e 'vim .config/vimb/config' || i3-msg [title=scratchpad_vimb] scratchpad show;
#bindsym $capsLock+c exec [ $( ps -eo cmd | grep -c '[/]usr/bin/franz-bin' ) -eq 2 ] && /usr/bin/franz-bin || i3-msg [title=Franz] scratchpad show;
bindsym $capsLock+m exec [ $( ps -eo cmd | grep -c '[t]ermite --title scratchpad_ncmpcpp' ) -eq 2 ] && termite --title scratchpad_ncmpcpp -e 'ncmpcpp' || i3-msg [title=scratchpad_ncmpcpp] scratchpad show;
bindsym $capsLock+Shift+m exec popup -h -t mpsyt -e mpsyt
bindsym $capsLock+p exec [ -z $( ps h -C gpodder -o comm=Command ) ] && gpodder || i3-msg [title=gPodder floating] scratchpad show;
bindsym $capsLock+r exec popup -h -t radio pyradio
bindsym $capsLock+e exec [ $( ps -eo cmd | grep -c '[t]ermite --title scratchpad_cal' ) -eq 2 ] && termite --title scratchpad_cal -e 'pal -m' || i3-msg [title=scratchpad_cal] scratchpad show;
bindsym $capsLock+n exec i3-msg '[class="VirtualBox Machine"] scratchpad show' && i3-msg '[class="VirtualBox Machine"] fullscreen enable';
bindsym $capsLock+s exec i3-msg '[class="Slack"] scratchpad show';
bindsym $capsLock+Shift+s exec i3-msg '[class="Teams"] scratchpad show';
#bindsym $capsLock+w exec [ $( ps -eo cmd | grep -c '[t]ermite --title scratchpad_vimwiki' ) -eq 2 ] && termite --title scratchpad_vimwiki -e 'vim -c VimwikiIndex' || i3-msg kill;
#bindsym $capsLock+i exec [ $( ps -eo cmd | grep -c '[t]ermite --title scratchpad_vimdiary' ) -eq 2 ] && termite --title scratchpad_vimdiary -e 'vim -c VimwikiDiaryIndex' || i3-msg kill;
#bindsym $capsLock+v exec [ $( ps -eo cmd | grep -c '[t]ermite --title scratchpad_vimb' ) -eq 2 ] && termite --title scratchpad_vimb -e 'vim .config/vimb/config' || i3-msg kill;
#focus; move scratchpad; scratchpad show


# Enable/disable logging
#bindsym $mod+x shmlog toggle

# Screensaver
# exec xautolock -locker "termite --title screensaver -e 'asciiquarium'"

# time reporting
exec aw-qt
exec nm-applet

