# app to start on launch i3
exec_always picom -f

# start a concole if not starting
exec pgrep -f "^alacritty --title terminal" >/dev/null || alacritty --title terminal

# Start the daemon which listens to focus changes and sets _back mark
exec --no-startup-id /usr/bin/i3-back

set $home /home/david

# special keys
set $alt Mod1
set $mod Mod4
set $capsLock Mod3

# fix floating windows size
# medium size
set $wfM_height 600
set $wfM_width 1000
# big size
set $wfL_height 1000
set $wfL_width 1800

set $screen1 eDP1
#set $screen2 DP1-2
set $screen2 HDMI1

# layout mode for new container
workspace_layout tabbed

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below. ISO 10646 = Unicode
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, if you need a lot of unicode glyphs or
# right-to-left text rendering, you should instead use pango for rendering and
# chose a FreeType font, such as:
font pango:MesloLGSDZ Nerd Font, icons, FontAwesome, Devicons, 10
#font pango:FuraCode Nerd Font, icons, FontAwesome, Devicons, 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Bind a switch key, which focuses the previously focused window
bindsym $capsLock+& [con_mark=_back] focus

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal;
bindsym $mod+Shift+Return splith; exec i3-sensible-terminal;

# kill focused window
bindsym $mod+Shift+q kill


# mark current win
bindsym $mod+Shift+n mark working
# switch tp mark
bindsym $mod+n [con_mark="working"] focus 

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run -i -nb '#859900' -nf '#eee8d5' -sb '#cb4b16' -fn 'MesloLGSDZ Nerd Font-10' -h 36
bindsym $mod+c exec clipmenu -i -nb '#2aa198' -nf '#eee8d5' -sb '#cb4b16' -fn 'MesloLGSDZ Nerd Font-10' -h 36
bindsym $mod+x exec "DMENU_HEIGHT=36 passdmenu -G -x s -P --type -D ~/share/bin/mypassdmenu"
#bindsym $mod+x exec PASSWORD_STORE_X_SELECTION=secondary passmenu -i -nb '#002b24' -nf '#eee8d5' -sb '#b58900' -fn 'MesloLGSDZ Nerd Font-10' -h 36 && xsel -o -s | xdotool type --file -
bindsym $mod+Shift+x exec "DMENU_HEIGHT=36 passdmenu -G -u -x p,s -P --type -r -D ~/share/bin/mypassdmenu"
bindsym $mod+$capsLock+x exec dmenu-pass-notify cb
bindsym $mod+s exec quickswitch -w -d "dmenu -i -nb '#eee8d5' -nf '#002b36' -sb '#859900' -fn 'MesloLGSDZ Nerd Font-10' -h 36"
bindsym $mod+Shift+s exec quickswitch -w -j -f -d "dmenu -i -nb '#eee8d5' -nf '#002b36' -sb '#859900' -fn 'MesloLGSDZ Nerd Font-10' -h 36"
bindsym $capsLock+Tab exec quickswitch -s -d "dmenu -l 10 -i -nb '#eee8d5' -nf '#002b36' -sb '#859900' -fn 'MesloLGSDZ Nerd Font-10' -h 36"
bindsym $mod+t exec "dict -d fd-eng-fra $(xclip -o) | tail +4 | dmenu -i -nb '#eee8d5' -nf '#002b36' -sb '#859900' -fn 'MesloLGSDZ Nerd Font-10' -h 36"
bindsym $mod+Shift+t exec "dict -d fd-fra-eng $(xclip -o) | tail +4 | dmenu -i -nb '#eee8d5' -nf '#002b36' -sb '#859900' -fn 'MesloLGSDZ Nerd Font-10' -h 36"
bindsym $mod+y exec dmenu-webnav
bindsym $mod+i exec dmenu-ssh
bindsym $mod+Shift+i exec work-file
bindsym $mod+Shift+f exec filemanager
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# english dictionary
bindsym $mod+Shift+d exec "export D_DICT_DB_OPT='-d english'; ~/share/bin/dict_lookup"

# search for selection on the web
bindsym $mod+g exec vimb "$(xclip -o)"

focus_follows_mouse no

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
#bindsym $mod+Left focus left
#bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
#bindsym $mod+Shift+Left move left
#bindsym $mod+Shift+Down move down
#bindsym $mod+Shift+Up move up
#bindsym $mod+Shift+Right move right

# cycle throw workspace
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev
bindsym $mod+Shift+Left workspace prev
bindsym $mod+Shift+Right workspace next

# split in horizontal orientation
bindsym $mod+Shift+v split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout splith

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# sticky window
#bindsym $mod+Shift+s sticky toggle
# focus the child container
#bindsym $mod+d focus child

bindsym $mod+Left move workspace to output left
bindsym $mod+Right move workspace to output right
bindsym $mod+Up move workspace to output up
bindsym $mod+Down move workspace to output down

#icon
set $vimIcon 

#menu title
set $menu1 1: terminal
set $menu2 2: web
set $menu3 3:
set $menu4 4: gmail
set $menu5 5:<span font=\"icomoon 13\"></span>
set $menu6 6:
set $menu7 7:
set $menu8 8:vmware
set $menu9 9: ssh
set $menu10 10: PE


# switch to workspace
bindsym $mod+1 workspace $menu1; exec pgrep -f "^alacritty --title terminal" >/dev/null || alacritty --title terminal
bindsym $mod+2 workspace $menu2; exec pgrep -f "^/usr/bin/vimb" >/dev/null || /usr/bin/vimb;  move workspace to output $screen2
bindsym $mod+3 workspace $menu3; exec pgrep -f "^alacritty --title uvim -e vim" >/dev/null || alacritty --title uvim -e vim
#bindsym $mod+4 workspace $menu4; layout tabbed; exec [ $( ps -eo cmd | grep -c '[u]rxvt -title muttgmail -e mutt' ) -eq 2 ] && urxvt -title muttgmail -e mutt -e "source ~/.mutt/gmail.com"
bindsym $mod+4 workspace $menu4; exec pgrep -f '^alacritty --title mail-gmail' >/dev/null || alacritty --title mail-gmail -e /usr/bin/mutt -e "source ~/.mutt/gmail.com"
bindsym $mod+5 workspace $menu5; exec ~/share/bin/i3/firefox; move workspace to output $screen2
bindsym $mod+6 workspace $menu6; exec pgrep -f '^/opt/brave-bin/brave' >/dev/null || /usr/bin/brave; move workspace to output $screen2
bindsym $mod+7 workspace $menu7; exec ~/share/bin/i3/photos
#bindsym $mod+5 workspace $menu5; exec [ $( ps -eo cmd | grep -c '[t]ermite --title muttperso' ) -eq 2 ] && termite --title muttperso -e '/usr/bin/mutt -e "source ~/.mutt/newmanity.com"'
#bindsym $mod+6 workspace $menu6; exec [ $( ps -eo cmd | grep -c '[t]ermite --title muttjit' ) -eq 2 ] && termite --title muttjit -e '/usr/bin/mutt -e "source ~/.mutt/jobintree.com"'
#bindsym $mod+7 workspace $menu7; exec [ $( ps -eo cmd | grep -c '[u]rxvt -title tmux-weechat -e ssh -t david@do.tyjak.net LANG=fr_FR.UTF-8 tmux a -t weechat' ) -eq 2 ] && urxvt -title tmux-weechat -e ssh -t david@do.tyjak.net LANG=fr_FR.UTF-8 tmux a -t weechat
bindsym $mod+8 workspace $menu8; exec pgrep -f '/usr/bin/vmware-view' >/dev/null || alacritty --title -e USER=david /usr/bin/vmware-view
bindsym $mod+9 workspace $menu9
bindsym $mod+0 workspace $menu10; exec pgrep -f "^peoutlook" >/dev/null || ~/share/bin/i3/peoutlook; move workspace to output $screen2

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $menu1
bindsym $mod+Shift+2 move container to workspace $menu2
bindsym $mod+Shift+3 move container to workspace $menu3
bindsym $mod+Shift+4 move container to workspace $menu4
bindsym $mod+Shift+5 move container to workspace $menu5
bindsym $mod+Shift+6 move container to workspace $menu6
bindsym $mod+Shift+7 move container to workspace $menu7
bindsym $mod+Shift+8 move container to workspace $menu8
bindsym $mod+Shift+9 move container to workspace $menu9
bindsym $mod+Shift+0 move container to workspace $menu10


# TODO: verify precedence with /etc/acpi/handler.sh
#set $sink `pactl list short sinks | grep RUNNING | head -1 | cut -f1`
#bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume $sink +5%
#bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume $sink -5%
bindsym XF86AudioMute exec --no-startup-id amixer set Master toggle
bindsym XF86AudioNext exec xf86audio next
bindsym XF86AudioPrev exec xf86audio prev
bindsym XF86AudioPause exec xf86audio toggle
#pb authorisation
#bindsym XF86MonBrightnessDown   exec xbacklight -dec 5 && pkill -RTMIN+20 i3blocks
#bindsym XF86MonBrightnessUp     exec xbacklight -inc 5 && pkill -RTMIN+20 i3blocks

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
  # font pango:FuraCode Nerd Font, 10
  font pango:Meslo LG S DZ, forkawesome, icomoon,  10
  status_command python ~/.config/i3/status.py
    position top
  colors {
    separator #93a1a1
    background #002b36
    statusline #93a1a1
    focused_workspace #eee8d5 #859900 #eee8d5
    active_workspace #fdf6e3 #6c71c4 #fdf6e3
    inactive_workspace #073642 #eee8d5 #002b36
    urgent_workspace #d33682 #d33682 #fdf6e3
  }
  strip_workspace_numbers yes
  tray_output primary
  # separator_symbol " "
}

hide_edge_borders both

#scratchpad
bindsym $mod+m move scratchpad
bindsym $mod+o scratchpad show

#automatic back-and-forth switch workspace
workspace_auto_back_and_forth yes

#generic
for_window [class="_popup-notitle-medium-sticky"] border pixel 1, floating enable, resize set $wfL_width $wfL_height, move position center, sticky enable
for_window [class="_popup-notitle-medium"] border pixel 1, floating enable, resize set $wfL_width $wfL_height, move position center
for_window [class="_popup-notitle"] border pixel 1, floating enable
for_window [class="_popup"] floating enable

#large, small and large borderless window popup
set $float_largeW_app Gpodder|Mpsyt|Modem-manager-gui|Nm-connection-editor|Mattermost|YouTube Music|teams-for-linux|webapp-*
set $float_smallW_app Pavucontrol|Blueberry.py|Pick-colour-picker
set $float_borderless_app Sxiv|Mattermost|YouTube Music|teams-for-linux
for_window [class="$float_largeW_app"] floating enable, resize set $wfL_width $wfL_height, move position center, sticky enable

#small window with no title bar (keep it small)
for_window [class="$float_smallW_app"] floating enable, resize set $wfM_width $wfM_height, move position center, border pixel 1, sticky enable
for_window [class="$float_borderless_app"]  floating enable, move position center, border pixel 1, sticky enable

# no title
set $no_border no_border|uvim|Urxvt|Termite|Gvim|Alacritty
for_window [class="$no_border"] border pixel 1

# scratchpad application
set $scratchpad_app teams-for-linux|Mattermost
for_window [class="$scratchpad_app"] move scratchpad, scratchpad show, move position center

# marked window
for_window [con_mark="ssh"] move container to workspace $menu9

# applications
for_window [title="filemanager"] border pixel 1, layout tabbed
for_window [title="JACK.*"] floating enable
for_window [title="Molotov"] floating enable, resize set $wfL_width $wfL_height, move position center, sticky enable, output $screen1
for_window [class="Deezer"] floating enable, border pixel 1, resize set $wfL_width $wfL_height, move position center, sticky enable, output $screen1
for_window [class="Caprine"] floating enable, resize set $wfL_width $wfL_height, border pixel 1, sticky enable;
for_window [title="pinentry"] floating enable
for_window [class="termite_dict"] floating enable, move position center, border pixel 1
for_window [title="david_adsnovo - Skype*"] focus, sticky enable, move right, resize shrink left 20 px or 20 ppt, layout splith;
for_window [title="Liste de contacts"] focus, sticky enable, move right, resize shrink left 20 px or 20 ppt, layout splith;
for_window [class="Cawbird"] resize set width 640 px;
for_window [title="^ [^ ]+$"] move --no-auto-back-and-forth container to workspace $menu9, focus
for_window [title="N26"] sticky enable, border pixel 1, move scratchpad, resize set 500 820, scratchpad show, move position center;
#for_window [class="Slack"] sticky enable, border pixel 1, move scratchpad, resize set $wfL_width $wfL_height, scratchpad show;
#for_window [class="Teams"] sticky enable, border pixel 1, move scratchpad, resize set $wfL_width $wfL_height, scratchpad show;
for_window [class="VirtualBox Machine"] sticky enable, border pixel 1, move scratchpad, fullscreen, scratchpad show;
for_window [class="Evolution-alarm-notify"] sticky enable, floating enable, border pixel 1, move scratchpad, scratchpad show, resize set 780px 820px, move position 1742px 36px;
#for_window [title="La Quadrature du Net - Mastodon - Media Fédéré"] focus parent, sticky enable, move right, resize shrink left 20 px or 20 ppt, layout splith;
#for_window [title="Twitter"] move right; resize shrink left 30 px or 30 ppt;
#for_window [class="Vimb"] border pixel 1
#for_window [title="vim"] title_format "<span font='devicons'> </span>%title"

# assign app to dedicated workspace
assign [title="uvim"] $menu3
assign [class="(pinta|Inkscape)"] graphic
for_window [class="(pinta|Inkscape)"] focus
assign [class="Pidgin"] pidgin
for_window [class="Pidgin"] focus
assign [class="Navigator"] $menu5
assign [class="Brave-browser"] $menu6
for_window [class="(Brave-browser|firefox)"] border pixel 1
assign [class="Shotwell"] $menu7
assign [class="Evolution"] $menu10
assign [class="trefle"] trèfle
assign [class="Vmware-view"] $menu8
for_window [class="trefle"] output $screen1
assign [class="Vimb" con_mark="(?!(mamot|simplyread))"] $menu2
for_window [class="Vimb" con_mark="(?!(mamot|simplyread))"] layout tabbed; focus
#assign [class="Urxvt"] terminal
#for_window [class="Urxvt"] layout splith; focus

#second screen
for_window [class="Caprine|Evolution|Brave-browser|Navigator"] output $screen2


#vimb with title starting by "scratchpad_" are moved to the scratch pad and show
#for_window [title="scratchpad_*"] sticky enable, border pixel 1;
set $scratchpads scratchpad_vimwikiperso|cratchpad_vimwiki|scratchpad_pevimwiki|scratchpad_vimdiary|scratchpad_vimb|skype|pidgin|iCloud|gPodder
for_window [title="$scratchpads"] sticky enable, border pixel 1, move scratchpad, scratchpad show;
for_window [title="scratchpad_ncmpcpp"] sticky enable, border pixel 1, move scratchpad, resize set $wfM_width  $wfM_height, scratchpad show;
for_window [title="scratchpad_cal"] sticky enable, border pixel 1, move scratchpad, scratchpad show;

client.focused #859900 #859900 #eee8d5 #859900
client.focused_inactive #073642 #073642 #586e75 #6c71c4
client.unfocused #073642 #073642 #93a1a1 #586e75
client.urgent #d33682 #d33682 #fdf6e3 #dc322f

#set $Locker i3lock -i ~/.config/wallpaper/solarized-dark.png -c 002b36 && sleep 1
set $Locker i3lock -c 002b36 && sleep 1

set $i3ctl i3 [r]eload re[s]tart restart [b]ar [e]xit
bindsym $mod+Shift+r mode "$i3ctl"
mode "$i3ctl" {
    # reload the configuration file
    bindsym r reload
    # restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
    bindsym s restart
    # exit i3 (logs you out of your X session)
    bindsym e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
    # restart bar
    bindsym b exec pkill -SIGUSR1 -f "python $home/.config/i3/status.py", mode "default"


    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# resize mod window $mod+r (you can also use the mouse for that)
set $ResizeWin move / resize /  [s]ticky / [bB]order / [c]enter / [f]loat right corner / [a]left corner / [z]right corner
bindsym $mod+r mode "$ResizeWin"
mode "$ResizeWin" {

    bindsym Shift + h resize grow width 10 px or 10 ppt
    bindsym Shift + j resize grow height 10 px or 10 ppt
    bindsym Shift + k resize shrink height 10 px or 10 ppt
    bindsym Shift + l resize shrink width 10 px or 10 ppt
    bindsym s sticky toggle, mode "default"
    bindsym Shift + b border pixel 1, mode "default"
    bindsym b border normal, mode "default"
    bindsym f border pixel 1, sticky enable, exec python3 -m i3grid snap --target 9 --rows 3 --cols 3, mode "default"
    bindsym a border pixel 1, sticky enable, exec python3 -m i3grid snap --target 4 --rows 2 --cols 1, mode "default"
    bindsym z border pixel 1, sticky enable, exec python3 -m i3grid snap --target 4 --rows 2 --cols 2, mode "default"
    #bindsym f floating enable, resize set $wfM_width $wfM_height, border pixel 1, sticky enable, mode "default"
    bindsym c move position center, mode "default"

    # same bindings, but for the arrow keys
    bindsym h move left 20 px
    bindsym j move down 20 px
    bindsym k move up 20 px
    bindsym l move right 20 px
    #bindsym Right move right 10 px
    #bindsym Up move up 10 px
    #bindsym Down move down 10 px
    #bindsym Left move left 10 px

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Press $mod+o followed by either f, t, Esc or Return to launch firefox,
#  etc ... or return to the default mode, respectively.
set $mode_launcher Launch: [b]rave [f]irefox [t]eams [m]attermost [r]emmina [w]ork-env [W]riter
bindsym $mod+p mode "$mode_launcher"

mode "$mode_launcher" {

    bindsym b exec brave, mode "default"
    bindsym f exec firefox, mode "default"
    bindsym t exec teams-for-linux, mode "default"
    bindsym m exec mattermost-desktop, mode "default"
    bindsym r exec remmina, mode "default"
    bindsym w exec work-env, mode "default"
    bindsym Shift + w exec writer, mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Press $mod+Shift+c s or f to take a screen shot
set $mode_screenshot Screenshot [s]election [f]ullscreen
set $screenshotCmdSel maim -s ~/Images/screenshot-$(date +%F-%H%M%S).png
set $screenshotCmdFull maim ~/Images/screenshot-$(date +%F-%H%M%S).png
bindsym $mod+Shift+c mode "$mode_screenshot"
bindsym Print exec maim -s ~/Images/screenshot-$(date +%F-%H%M%S).png, mode "default"
bindsym $mod+Print exec $screenshotCmdFull, mode "default"

mode "$mode_screenshot" {

    #bindsym s exec maim --opengl --magnify -s ~/Desktop/screenshot-$(date +%F-%H%M%S).png, mode "default"
    bindsym s exec maim -s ~/Images/screenshot-$(date +%F-%H%M%S).png, mode "default"
    bindsym f exec maim ~/Images/screenshot-$(date +%F-%H%M%S).png, mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# file navigation with ranger
# set $mode_filemanager Goto [h]ome [d]ownloads [s]hare [D]esktop [w]ork
# bindsym $mod+Shift+f mode "$mode_filemanager"

#mode "$mode_filemanager" {
#
#    bindsym h exec filemanager ~/., mode "default"
#    bindsym d exec filemanager ~/downloads, mode "default"
#    bindsym s exec filemanager ~/share, mode "default"
#    bindsym Shift+d exec filemanager ~/Desktop, mode "default"
#    bindsym w exec filemanager ~/WORK/pe, mode "default"
#
#    # back to normal: Enter or Escape
#    bindsym Return mode "default"
#    bindsym Escape mode "default"
#}

#USB mount file
set $mode_usbmount USB [m]ount or [u]mount
bindsym $mod+u mode "$mode_usbmount"
mode "$mode_usbmount" {
    bindsym m exec zsh -i -c 'udiskie-mount -2ar', mode "default"
    bindsym u exec zsh -i -c 'udiskie-umount /run/media/*/*', mode "default"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}


# system mode, hit power button to halt, suspend, reboot or shutdown
set $mode_system System [l] lock, [e] logout, [s] suspend, [h] hibernate, [r] reboot, [Shift]+[s] shutdown
bindsym Pause mode "$mode_system"
bindsym XF86Sleep "$mode_system"
bindsym XF86PowerOff mode "$mode_system"

mode "$mode_system" {

    bindsym l exec --no-startup-id $Locker, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# mplayer control and mpd control
set $mode_player player: [Pp]ause/[Pp]lay [n]ext [Ss]eek [Qq]quit/stop
bindsym $mod+b mode "$mode_player"

mode "$mode_player" {

    bindsym p exec zsh -i -c 'echo "pause" > /tmp/mplayer', mode "default"
    bindsym Shift+p exec mpc toggle, mode "default"
    bindsym n exec zsh -i -c 'mpc next', mode "default"
    bindsym s exec zsh -i -c 'echo "seek 10" > /tmp/mplayer'
    bindsym Shift+s exec mpc seek +10
    bindsym q exec zsh -i -c 'echo "quit" > /tmp/mplayer && mpc stop', mode "default"
    bindsym Shift+q exec mpc stop, mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# on/off hardware (wifi, ethernet, 3G,)
set $mode_killswitch switch: [M]odem OFF [m]odem ON [W]ifi OFF [w]iffi ON [B]luetooth OFF [b]luetooth ON
bindsym XF86WLAN mode "$mode_killswitch"

mode "$mode_killswitch" {

    bindsym Shift+m exec zsh -i -c 'rfkill block wwan', mode "default"
    bindsym m exec zsh -i -c 'rfkill unblock wwan', mode "default"
    bindsym Shift+w exec zsh -i -c 'rfkill block wwan', mode "default"
    bindsym w exec zsh -i -c 'rfkill unblock wan', mode "default"
    bindsym Shift+w exec zsh -i -c 'rfkill block wlan', mode "default"
    bindsym w exec zsh -i -c 'rfkill unblock wlan', mode "default"
    bindsym Shift+b exec zsh -i -c 'rfkill block bluetooth', mode "default"
    bindsym b exec zsh -i -c 'rfkill unblock bluetooth', mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $capsLock+t exec [ $( ps -eo cmd | grep -c '[a]lacritty -T scratchpad_pevimwiki' ) -eq 2 ] && (alacritty -T scratchpad_pevimwiki -e vim ~/share/vimwiki_boulot/index.wiki) || i3-msg [title=scratchpad_pevimwiki] scratchpad show;
bindsym $capsLock+Shift+t exec task-i3
bindsym $capsLock+w exec [ $( ps -eo cmd | grep -c '[a]lacritty -T scratchpad_vimwiki ' ) -eq 2 ] && (alacritty -T scratchpad_vimwiki -e vim -c VimwikiIndex) || i3-msg [title=scratchpad_vimwiki] scratchpad show;
bindsym $capsLock+i exec [ $( ps -eo cmd | grep -c '[a]lacritty -T scratchpad_vimdiary' ) -eq 2 ] && (alacritty -T scratchpad_vimdiary -e vim -c VimwikiDiaryIndex) || i3-msg [title=scratchpad_vimdiary] scratchpad show;
bindsym $capsLock+v exec [ $( ps -eo cmd | grep -c '[a]lacritty --class scratchpad -T scratchpad_vimb' ) -eq 2 ] && (alacritty --class scratchpad -T scratchpad_vimb -e vim .config/vimb/config) || i3-msg [title=scratchpad_vimb] scratchpad show;
#bindsym $capsLock+c exec [ $( ps -eo cmd | grep -c '[/]usr/bin/franz-bin' ) -eq 2 ] && /usr/bin/franz-bin || i3-msg [title=Franz] scratchpad show;
bindsym $capsLock+m exec [ $( ps -eo cmd | grep -c '[a]lacritty --title scratchpad_ncmpcpp' ) -eq 2 ] && (alacritty --title scratchpad_ncmpcpp -e ncmpcpp) || i3-msg [title=scratchpad_ncmpcpp] scratchpad show;
bindsym $capsLock+Shift+m exec popup -h -t mpsyt -e mpsyt
bindsym $capsLock+k exec stig-i3
bindsym $capsLock+p exec [ $( ps -eo cmd | grep -c '[a]lacritty --title scratchpad_vimwikiperso' ) -eq 2 ] && (alacritty --title scratchpad_vimwikiperso -e vim ~/share/vimwiki_perso/index.wiki) || i3-msg [title=scratchpad_vimwikiperso] scratchpad show;
bindsym $capsLock+Shift+p exec [ -z $( ps h -C gpodder -o comm=Command ) ] && gpodder || i3-msg [title=gPodder floating] scratchpad show;
bindsym $capsLock+r exec popup -h -t radio pyradio
bindsym $capsLock+e exec popup -t cal pal -m
bindsym $capsLock+n exec i3-msg '[class="VirtualBox Machine"] scratchpad show' && i3-msg '[class="VirtualBox Machine"] fullscreen enable';
bindsym $capsLock+s exec [ $(pgrep -f "mattermost-desktop") ] && mattermost-desktop || (i3-msg '[class="Mattermost"] scratchpad show' && i3-msg '[class="Mattermost"] move position center');
bindsym $capsLock+Shift+s exec [ $(pgrep -f "teams-for-linux") ] && (teams-for-linux  --enableDesktopNotificationsHack) || (i3-msg '[class="teams-for-linux"] scratchpad show' && i3-msg '[class="teams-for-linux"] move position center');
bindsym $capsLock+q exec qrcode
#bindsym $capsLock+w exec [ $( ps -eo cmd | grep -c '[t]ermite --title scratchpad_vimwiki' ) -eq 2 ] && termite --title scratchpad_vimwiki -e 'vim -c VimwikiIndex' || i3-msg kill;
#bindsym $capsLock+i exec [ $( ps -eo cmd | grep -c '[t]ermite --title scratchpad_vimdiary' ) -eq 2 ] && termite --title scratchpad_vimdiary -e 'vim -c VimwikiDiaryIndex' || i3-msg kill;
#bindsym $capsLock+v exec [ $( ps -eo cmd | grep -c '[t]ermite --title scratchpad_vimb' ) -eq 2 ] && termite --title scratchpad_vimb -e 'vim .config/vimb/config' || i3-msg kill;
#focus; move scratchpad; scratchpad show


# Enable/disable logging
#bindsym $mod+x shmlog toggle

bindsym XF86Favorites exec dunstctl history-pop

# Screensaver
exec xautolock -detectsleep \
          #-notify  600 -notifier "xset dpms force off" \
          #-time     10 -locker   "alacritty --title screensaver -e asciiquarium" \
          -time     10 -locker   "xset dpms force off" \
          -killtime 70 -killer   "systemctl suspend"

# time reporting
exec aw-qt
exec nm-applet

